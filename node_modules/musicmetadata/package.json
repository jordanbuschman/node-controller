{
  "name": "musicmetadata",
  "description": "Streaming music metadata parser for node and the browser.",
  "version": "0.4.6",
  "author": {
    "name": "Lee Treveil"
  },
  "dependencies": {
    "buffer-equal": "0.0.0",
    "strtok2": "~1.0.0",
    "filereader-stream": "0.0.1",
    "through": "~2.3.4",
    "node-bitarray": "0.0.2",
    "deep-equal": "~0.1.2",
    "int53": "0.2.3"
  },
  "keywords": [
    "id3",
    "id3v1",
    "id3v2",
    "m4a",
    "mp4",
    "vorbis",
    "ogg",
    "flac",
    "asf",
    "wma",
    "wmv",
    "tags",
    "tag"
  ],
  "main": "lib",
  "browser": "lib/browser",
  "scripts": {
    "pretest": "jshint lib/*.js test/*.js",
    "test": "[ ! -d 'test/' ] && echo 'The test directory is not included with the project due to the size of the test audio files. If you want to run the tests you can git clone the project.' || prova test/test-*.js",
    "test-browser": "prova -t brfs test/test-*.js -b",
    "dist": "browserify lib/browser.js --standalone 'musicmetadata' -o dist/musicmetadata.js"
  },
  "devDependencies": {
    "prova": "~1.9.0",
    "jshint": "~2.4.3",
    "brfs": "1.2.0"
  },
  "testling": {
    "files": [
      "test/test-js-*.js",
      "test/js-*.js"
    ],
    "browsers": [
      "firefox/latest",
      "chrome/latest",
      "safari/latest"
    ]
  },
  "engines": {
    "node": "*"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/leetreveil/node-musicmetadata.git"
  },
  "jshintConfig": {
    "asi": true,
    "node": true,
    "maxlen": 100,
    "indent": 2
  },
  "readme": "[![Build Status][travis-image]][travis-url] [![NPM version][npm-image]][npm-url] [![npm downloads][npm-downloads-image]][npm-url]\n\nStreaming music metadata parser for node and the browser.\n\nInstallation\n------------\nInstall via [npm](http://npmjs.org):\n\n```\nnpm install musicmetadata\n```\n\nOr with [bower](http://bower.io) if you're in the browser:\n\n```\nbower install musicmetadata\n```\n\nIf you're old'skool you can download the latest tar ball from https://github.com/leetreveil/musicmetadata/releases.\n\n\nSupports\n-----------------\n* mp3 (1.1, 2.2, 2.3, 2.4)\n* m4a (mp4)\n* vorbis (ogg, flac)\n* asf (wma, wmv)\n\n\nAPI\n-----------------\n```javascript\nvar fs = require('fs');\nvar mm = require('musicmetadata');\n\n// create a new parser from a node ReadStream\nvar parser = mm(fs.createReadStream('sample.mp3'));\n\n// listen for the metadata event\nparser.on('metadata', function (result) {\n  console.log(result);\n});\n```\n\nThis will output the standard music metadata:\n\n```javascript\n{ artist : ['Spor'],\n  album : 'Nightlife, Vol 5.',\n  albumartist : [ 'Andy C', 'Spor' ],\n  title : 'Stronger',\n  year : '2010',\n  track : { no : 1, of : 44 },\n  disk : { no : 1, of : 2 },\n  genre : ['Drum & Bass'],\n  picture : [ { format : 'jpg', data : <Buffer> } ],\n  duration : 302 // in seconds\n}\n```\n\nIf you just want the artist - listen for the artist event:\n\n```javascript\nparser.on('artist', function (result) {\n  console.log(result);\n});\n```\n\nYou can also listen for custom metadata types that are not part of the standard metadata as defined above. For example if you wanted to read the `TLEN` frame from a id3v2.x file you can do this:\n\n```javascript\nparser.on('TLEN', function (result) {\n  console.log(result);\n});\n```\n\nThe ```done``` event will be raised when parsing has finished or an error has occurred. This could be\nused to disconnect from the stream as soon as parsing has finished, saving bandwidth.\n\n```javascript\nparser.on('done', function (err) {\n  if (err) throw err;\n  stream.destroy();\n});\n```\n\nYou can also read the duration; reading the duration may be slow so only set this if you need to.\n```javascript\nvar parser = mm(fs.createReadStream('sample.mp3'), { duration: true });\n```\n\nNote that in order to read the duration for streams that are not file streams, you must also pass the size of the file in bytes.\n```javascript\nvar parser = mm(fs.createReadStream('sample.mp3'), { duration: true, fileSize: 26838 });\n```\n\nLicence\n-----------------\n\n(The MIT License)\n\nCopyright (c) 2014 Lee Treveil <leetreveil@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the 'Software'), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n[npm-url]: https://npmjs.org/package/musicmetadata\n[npm-image]: https://badge.fury.io/js/musicmetadata.svg\n[npm-downloads-image]: http://img.shields.io/npm/dm/musicmetadata.svg\n\n[travis-url]: https://travis-ci.org/leetreveil/musicmetadata\n[travis-image]: https://api.travis-ci.org/leetreveil/musicmetadata.svg?branch=master\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/leetreveil/node-musicmetadata/issues"
  },
  "_id": "musicmetadata@0.4.6",
  "_from": "musicmetadata@~0.4.6"
}
